// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @unique @default(uuid())
  email    String @unique
  password String

  accounts Accounts[]

  user_goal User_goal[]
}

model Expenditure_plan {
  id String @id @unique @default(uuid())

  income_type    Income_types @relation(fields: [income_type_id], references: [id])
  income_type_id Int
}

model Accounts {
  id      String  @id @unique @default(uuid())
  name    String
  amount  Float   @default(0)
  default Boolean // TODO Recreate the database.

  user    User   @relation(fields: [user_id], references: [id])
  user_id String

  income Income[]
}

model Income {
  id               String   @id @unique @default(uuid())
  amount           Float
  date             DateTime
  repetable        Boolean  @default(false)
  note             String?
  repetable_period String?

  account    Accounts @relation(fields: [account_id], references: [id])
  account_id String

  income_type    Income_types @relation(fields: [income_type_id], references: [id])
  income_type_id Int
}

model Income_types {
  id        Int    @id @unique @default(autoincrement())
  name      String
  in_or_out Int

  income           Income[]
  expenditure_plan Expenditure_plan[]
}

model User_goal {
  id             String   @id @unique @default(uuid())
  name           String
  description    String?
  remaining_time Float
  end_date       DateTime

  user    User   @relation(fields: [user_id], references: [id])
  user_id String
}
